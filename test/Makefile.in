# @configure_input@

# Package
package     := @PACKAGE_NAME@
version     := @PACKAGE_VERSION@
tarname     := @PACKAGE_TARNAME@

# Directories
prefix      := @prefix@
exec_prefix := @exec_prefix@
bindir      := @bindir@
srcdir      := ../src
datarootdir := @datarootdir@
datadir     := @datadir@
docdir      := @docdir@
htmldir     := @htmldir@
srcmodules  := ${filter %/,${wildcard $(srcdir)/*/}}
modules     := ${patsubst $(srcdir)/%/,%,$(srcmodules)}

# Tools
CXX         := @CXX@
INCLUDES    := -I../ -I$(srcdir)/ ${foreach m,$(modules),-I$(srcdir)/$(m)/}
DEFS        := @DEFS@
DEFS_EXTRA  := 
DEPS_CFLAGS := @DEPS_CFLAGS@
CXXFLAGS    := @CXXFLAGS@ $(DEFS) $(DEFS_EXTRA) $(DEPS_CFLAGS) $(INCLUDES)
LIBS        := @LIBS@
LIBS_EXTRA  := -lglawt
DEPS_LIBS   := @DEPS_LIBS@
LDFLAGS     := @LDFLAGS@ $(LIBS) $(LIBS_EXTRA) $(DEPS_LIBS)
ARFLAGS     := -cr
INSTALL     := @INSTALL@

# Files
archive     := $(srcdir)/lib$(tarname).a
mains       := ${foreach m,$(modules),${wildcard $(m)/*.cxx}}
tests       := ${subst .cxx,,$(mains)}
objects     := ${subst .cxx,.o,$(mains)}
depends     := ${subst .cxx,.t,$(mains)}
VPATH       := $(modules) $(srcdir) $(srcmodules)

# General phony targets
.PHONY: all clean mostlyclean tests dump
.DEFAULT: all
all: tests
clean: mostlyclean
mostlyclean:
	@echo "  Removing tests..."
	@$(RM) $(tests)
dump:
	@echo "  MODULES = $(modules)"
	@echo "  MAINS   = $(mains)"
	@echo "  OBJECTS = $(objects)"
	@echo "  TESTS   = $(tests)"
	@echo "  VPATH   = $(VPATH)"

# Modules
.PHONY: $(modules)
define module
$(1): $${filter $(1)/%,$(tests)}
endef
${foreach i,$(modules),${eval ${call module,$(i)}}}

# Tests
%: %.cxx %.o
	@echo "  $<"
	@$(CXX) $(CXXFLAGS) -o ${dir $<}${notdir $@} $< $(archive) $(LDFLAGS)
tests: ${notdir $(tests)}
${notdir $(tests)}:
${notdir $(objects)}:

# Objects
%.o:
	@$(MAKE) -C $(srcdir) ${notdir $@}

# Dependencies
%.t: %.cxx
	@echo "  Generating dependencies for $<..."
	@$(CXX) $(CXXFLAGS) -MM $< -MT ${notdir ${subst .cxx,,$<}} \
        | sed 's/.hpp/.o/g' >> $@;
ifneq ($(findstring clean,$(MAKECMDGOALS)),clean)
  -include $(depends)
endif

